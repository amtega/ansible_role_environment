# Setup image source

{% if item.registry is defined %}
FROM {{ item.registry.url }}/{{ item.image }}
{% else %}
FROM {{ item.image }}
{% endif %}

# Setup environment variables

{% if item.env is defined %}
{% for var, value in item.env.items() %}
{% if value %}
ENV {{ var }} {{ value }}
{% endif %}
{% endfor %}
{% endif %}

# Setup packages

RUN if [ $(command -v dnf) ]; then \
      dnf makecache ; \
      dnf --assumeyes install python || true ; \
      dnf --assumeyes install python3 || true ; \
      dnf --assumeyes install sudo python*-dnf bash iproute systemd ; \
      dnf clean all; \
    elif [ $(command -v yum) ]; then \
      yum makecache fast ; \
      yum install -y python || true ; \
      yum install -y python3 || true ; \
      yum install -y sudo yum-plugin-ovl bash iproute systemd ; \
      sed -i "s/plugins=0/plugins=1/g" /etc/yum.conf ; \
      yum clean all; \
    fi

# Setup systemd

ENV container docker

RUN rm -f /lib/systemd/system/sysinit.target.wants/systemd-tmpfiles-setup.service ; \
    rm -f /lib/systemd/system/multi-user.target.wants/* ; \
    rm -f /etc/systemd/system/*.wants/* ; \
    rm -f /lib/systemd/system/local-fs.target.wants/* ; \
    rm -f /lib/systemd/system/sockets.target.wants/*udev* ; \
    rm -f /lib/systemd/system/sockets.target.wants/*initctl* ; \
    rm -f /lib/systemd/system/basic.target.wants/* ; \
    rm -f /lib/systemd/system/anaconda.target.wants/* ;

# Setup volumes

VOLUME [ "/sys/fs/cgroup" ]
VOLUME [ "/run" ]
